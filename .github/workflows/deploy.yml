name: Deploy to Lightsail

on:
  push:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.HOST_IP }} >> ~/.ssh/known_hosts
    
    - name: Sync frontend files
      run: |
        ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.HOST_IP }} "
          sudo mkdir -p /var/www/autoplan.hyoda.kr
          sudo chown ubuntu:ubuntu /var/www/autoplan.hyoda.kr
        "
        
        rsync -avz -e 'ssh -i ~/.ssh/id_rsa' \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='*.md' \
          --exclude='cursor-*' \
          --exclude='tasks' \
          --exclude='api' \
          ./ ubuntu@${{ secrets.HOST_IP }}:/var/www/autoplan.hyoda.kr/
    
    - name: Setup and deploy API
      run: |
        ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.HOST_IP }} "
          # Install PM2 if not exists
          if ! command -v pm2 &> /dev/null; then
            sudo npm install -g pm2
          fi
          
          # Setup API directory
          sudo mkdir -p /var/www/autoplan-api
          sudo chown ubuntu:ubuntu /var/www/autoplan-api
        "
        
        # Sync API files
        rsync -avz -e 'ssh -i ~/.ssh/id_rsa' \
          ./api/ ubuntu@${{ secrets.HOST_IP }}:/var/www/autoplan-api/
        
        # Install dependencies and restart API
        ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.HOST_IP }} "
          # Load NVM environment
          export NVM_DIR=\"\$HOME/.nvm\"
          [ -s \"\$NVM_DIR/nvm.sh\" ] && . \"\$NVM_DIR/nvm.sh\"
          
          cd /var/www/autoplan-api
          
          # Verify Node.js environment
          echo \"Node version: \$(node -v)\"
          echo \"NPM version: \$(npm -v)\"
          
          # Install dependencies
          npm install --production
          
          # Restart PM2 process
          pm2 restart hub-verdi-api || pm2 start ecosystem.config.js
          pm2 save
        "
      
      - name: Health check
        run: |
          echo "Waiting for API to start..."
          sleep 5
          curl -f https://autoplan.hyoda.kr/api/health || exit 1
          echo "âœ… API deployment successful!"